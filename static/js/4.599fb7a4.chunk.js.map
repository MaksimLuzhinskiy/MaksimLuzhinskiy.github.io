{"version":3,"sources":["components/commonComponent/orderParts/orderAdditionalInfo.tsx","components/commonComponent/orderParts/orderDefaultInfo.tsx","components/profile/profileBody/inputProfile/InputProfile.tsx","components/profile/profileBody/personalData/PersonalData.tsx","components/profile/profileBody/orderList/orderProfileItem/orderItem.tsx","components/profile/profileBody/orderList/OrderList.tsx","components/profile/profileBody/ProfileBody.tsx","components/profile/topGoHome/HeaderProfile.tsx","components/profile/ProfileComponent.tsx","layouts/profile.tsx"],"names":["OrderAdditionalInfo","payment","delivery","className","TypePaymentRus","TypePayment","TypeDeliveryRus","TypeDelivery","OrderDefaultInfo","numberOrder","promocode","totalPrice","ErrorMessage","styled","div","InputProfile","htmlFor","this","props","name","ruName","errorMessage","onChange","changeEvent","type","id","value","Component","FormSchema","Yup","shape","required","email","phone","min","max","PersonalData","state","user","CommonTitle","title","initialValues","validationSchema","onSubmit","values","setSubmitting","setTimeout","alert","JSON","stringify","errors","handleChange","handleSubmit","isSubmitting","disabled","OrderItem","orderItem","items","forEach","element","counts","item","price","click","setState","isOpen","itemCLassList","classNames","active","idOrder","paymentChoose","deliveryChoose","onClick","to","index","idUser","OrderList","order","map","currentUserId","Connect","connect","appSelectors","Wrap","HeaderProfile","dispatch","clearUser","appActions","Connector","navigate","useNavigate","src","alt","UserEmpty","localStorage","removeItem","ProfileComponent","appSelector","fetchUserFromLocalStorage","appAction","addUser","checkUserFromLocalStorage","getItem","parse","useEffect","undefined","Profile"],"mappings":"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","file":"static/js/4.599fb7a4.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\nimport {\r\n  TypeDelivery,\r\n  TypeDeliveryRus,\r\n  TypePayment,\r\n  TypePaymentRus,\r\n} from \"../../../api/enums\";\r\nexport interface IOrderAdditionalInfoProps {\r\n  payment: string;\r\n  delivery: string;\r\n}\r\n\r\nconst OrderAdditionalInfo: FC<IOrderAdditionalInfoProps> = ({\r\n  payment,\r\n  delivery,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"orderItem__payment\">\r\n        Вид оплаты: {TypePaymentRus[TypePayment[payment]]}\r\n      </div>\r\n      <div className=\"orderItem__delivery\">\r\n        Тип доставки: {TypeDeliveryRus[TypeDelivery[delivery]]}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderAdditionalInfo;\r\n","import React, { FC } from \"react\";\r\nexport interface IOrderDefaultInfoProps {\r\n  numberOrder: string;\r\n  promocode: string;\r\n  totalPrice: string;\r\n}\r\n\r\nconst OrderDefaultInfo: FC<IOrderDefaultInfoProps> = ({\r\n  numberOrder,\r\n  promocode,\r\n  totalPrice,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"orderItem__id\">Номер заказа: {numberOrder}</div>\r\n      <div className=\"orderItem__promocode\">Промокод: {promocode}</div>\r\n      <div className=\"orderItem__promocode\">\r\n        Сумма заказа: {`${totalPrice} ₽`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDefaultInfo;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nexport interface IProps {\r\n  value: string;\r\n  name: string;\r\n  ruName: string;\r\n  changeEvent(e: React.ChangeEvent<any>): void;\r\n  errorMessage: any;\r\n}\r\n\r\nconst ErrorMessage = styled.div`\r\n  font-size: 18px;\r\n  color: red;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nclass InputProfile extends Component<IProps> {\r\n  render() {\r\n    return (\r\n      <div className=\"personalData__input\">\r\n        <label htmlFor={this.props.name}>{this.props.ruName}</label>\r\n        {this.props.errorMessage && (\r\n          <ErrorMessage>{this.props.errorMessage}</ErrorMessage>\r\n        )}\r\n        <input\r\n          onChange={this.props.changeEvent}\r\n          type=\"text\"\r\n          id={this.props.name}\r\n          name={this.props.name}\r\n          value={this.props.value}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputProfile;\r\n","import React, { Component } from \"react\";\r\nimport { UserModel } from \"../../../../api/models\";\r\nimport InputProfile from \"../inputProfile/InputProfile\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport \"./PersonalData.scss\";\r\nimport PhoneInput from \"react-phone-number-input/input\";\r\nimport CommonTitle from \"../../../commonComponent/commonTitle/CommonTitle\";\r\nexport interface IProps {\r\n  user: UserModel;\r\n}\r\nexport interface IState {\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n}\r\n\r\nexport interface IFormik {\r\n  email?: string;\r\n  password?: string;\r\n}\r\n\r\nconst FormSchema = Yup.object().shape({\r\n  name: Yup.string().required(\"Required\"),\r\n  email: Yup.string().email(\"Invalid Email\"),\r\n  phone: Yup.string().min(11, \"To Short\").max(11, \"Too Long\"),\r\n});\r\n\r\nclass PersonalData extends Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      phone: this.props.user.phone,\r\n      name: this.props.user.name,\r\n      email: this.props.user.email,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"personalData\">\r\n        <CommonTitle title=\"Мои данные:\"></CommonTitle>\r\n        <Formik\r\n          initialValues={this.state}\r\n          validationSchema={FormSchema}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              alert(JSON.stringify(values, null, 2));\r\n              setSubmitting(false);\r\n            }, 400);\r\n          }}\r\n        >\r\n          {({ values, errors, handleChange, handleSubmit, isSubmitting }) => (\r\n            <form onSubmit={handleSubmit}>\r\n              <InputProfile\r\n                value={values.name}\r\n                key={`name`}\r\n                ruName=\"Имя\"\r\n                name=\"name\"\r\n                changeEvent={handleChange}\r\n                errorMessage={errors.name}\r\n              />\r\n              <InputProfile\r\n                value={values.phone}\r\n                key={`phone`}\r\n                ruName=\"Телефон\"\r\n                name=\"phone\"\r\n                changeEvent={handleChange}\r\n                errorMessage={errors.phone}\r\n              />\r\n              <InputProfile\r\n                value={values.email}\r\n                key={`email`}\r\n                ruName=\"Email\"\r\n                name=\"email\"\r\n                changeEvent={handleChange}\r\n                errorMessage={errors.email}\r\n              />\r\n              <button\r\n                className=\"personalData__button\"\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n              >\r\n                Сохранить\r\n              </button>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PersonalData;\r\n","import classNames from \"classnames\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ICart } from \"../../../../../store/cart\";\r\nimport OrderAdditionalInfo from \"../../../../commonComponent/orderParts/orderAdditionalInfo\";\r\nimport OrderDefaultInfo from \"../../../../commonComponent/orderParts/orderDefaultInfo\";\r\nimport \"./orderItem.scss\";\r\nexport interface IPropsItemList {\r\n  orderItem: ICart;\r\n  index: string;\r\n  idUser: string;\r\n}\r\nexport interface IState {\r\n  isOpen: boolean;\r\n}\r\n\r\nclass OrderItem extends Component<IPropsItemList, IState> {\r\n  constructor(props: IPropsItemList) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n    };\r\n  }\r\n  protected totalPrice = () => {\r\n    let totalPrice = 0;\r\n    this.props.orderItem.items.forEach((element) => {\r\n      totalPrice += element.counts * element.item.price;\r\n    });\r\n    return totalPrice;\r\n  };\r\n\r\n  protected click = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n  render() {\r\n    const itemCLassList = classNames(\"orderItem\", {\r\n      active: this.state.isOpen,\r\n    });\r\n    return (\r\n      <div className={itemCLassList}>\r\n        <div className=\"wrapOrderItem\">\r\n          <OrderDefaultInfo\r\n            numberOrder={this.props.orderItem.idOrder}\r\n            promocode={this.props.orderItem.promocode}\r\n            totalPrice={`${this.totalPrice()}`}\r\n          ></OrderDefaultInfo>\r\n          {this.state.isOpen && (\r\n            <OrderAdditionalInfo\r\n              payment={this.props.orderItem.paymentChoose}\r\n              delivery={this.props.orderItem.deliveryChoose}\r\n            ></OrderAdditionalInfo>\r\n          )}\r\n        </div>\r\n        <div className=\"buttonWrap\">\r\n          <div onClick={this.click} className=\"str\">\r\n            <Link to={`/profile/${this.props.index}/${this.props.idUser}`}>\r\n              Отдельная страница\r\n            </Link>\r\n          </div>\r\n          <div onClick={this.click} className=\"more\">\r\n            {this.state.isOpen ? \"Скрыть\" : \"Подробнее...\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrderItem;\r\n","import React, { Component } from \"react\";\r\nimport { ICart } from \"../../../../store/cart\";\r\nimport OrderItem from \"./orderProfileItem/orderItem\";\r\nimport \"./OrderList.scss\";\r\nimport CommonTitle from \"../../../commonComponent/commonTitle/CommonTitle\";\r\nexport interface IProps {\r\n  order: ICart[];\r\n  currentUserId: string;\r\n}\r\n\r\nclass OrderList extends Component<IProps> {\r\n  render() {\r\n    return (\r\n      <div className=\"orderList\">\r\n        <CommonTitle title=\"Мои заказы:\"></CommonTitle>\r\n        <div className=\"orderList__wrap\">\r\n          {this.props.order.map((element, index) => (\r\n            <OrderItem\r\n              idUser={this.props.currentUserId}\r\n              orderItem={element}\r\n              index={`${index}`}\r\n              key={element.idOrder}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrderList;\r\n","import React, { Component } from \"react\";\r\nimport * as appSelectors from \"../../../store/app/app.selectors\";\r\nimport { connect } from \"react-redux\";\r\nimport { UserModel } from \"../../../api/models\";\r\nimport PersonalData from \"./personalData/PersonalData\";\r\nimport \"./ProfileBody.scss\";\r\nimport OrderList from \"./orderList/OrderList\";\r\nexport interface IProps {\r\n  user: UserModel;\r\n  order: any;\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: appSelectors.selectGetCurrentUser(state),\r\n    order: appSelectors.selectLocalStorageOrder(state),\r\n  };\r\n};\r\nconst Connect = connect(mapStateToProps);\r\n\r\nclass ProfileBody extends Component<IProps> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"profileBody\">\r\n        {this.props.user !== null && (\r\n          <PersonalData user={this.props.user}></PersonalData>\r\n        )}\r\n        {this.props.user !== null && (\r\n          <OrderList\r\n            currentUserId={`${this.props.user.id}`}\r\n            order={this.props.order}\r\n          ></OrderList>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Connect(ProfileBody);\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"./HeaderProfile.scss\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport UserEmpty from \"../../mainpage/header/account/userEmpty/UserEmpty\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { DispatchThunk } from \"../../../store\";\r\nimport { UserModel } from \"../../../api/models\";\r\nimport * as appActions from \"../../../store/app/app.actions\";\r\n\r\nconst Wrap = styled.div`\r\n  height: 55px;\r\n  width: 100%;\r\n  background: #c6d2d2;\r\n`;\r\nconst mapToStateProps = (state) => {\r\n  return {};\r\n};\r\nconst mapToDispatch = (dispatch: DispatchThunk) => {\r\n  return {\r\n    clearUser: () => {\r\n      dispatch(appActions.Actions.clearUser());\r\n    },\r\n  };\r\n};\r\n\r\nconst Connector = connect(mapToStateProps, mapToDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof Connector>;\r\n\r\nconst HeaderProfile = Connector((props: PropsFromRedux) => {\r\n  const navigate = useNavigate();\r\n\r\n  const back = () => {\r\n    navigate(\"/\");\r\n  };\r\n  const leaveFromAccount = () => {\r\n    localStorage.removeItem(\"user\");\r\n    props.clearUser();\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Wrap>\r\n      <div className=\"profileHeader\">\r\n        <div onClick={back} className=\"returnButton\">\r\n          <img src=\"left-profile.png\" alt=\"\" />\r\n          <div>Вернуться на главную</div>\r\n        </div>\r\n        <UserEmpty title=\"Выйти\" click={leaveFromAccount}></UserEmpty>\r\n      </div>\r\n    </Wrap>\r\n  );\r\n});\r\n\r\nexport default HeaderProfile;\r\n","import React, { useEffect } from \"react\";\r\nimport ProfileBody from \"./profileBody/ProfileBody\";\r\nimport * as appSelector from \"../../store/app/app.selectors\";\r\nimport * as appAction from \"../../store/app/app.actions\";\r\nimport HeaderProfile from \"./topGoHome/HeaderProfile\";\r\nimport { DispatchThunk } from \"../../store\";\r\nimport { UserModel } from \"../../api/models\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\n\r\nconst mapToStateProps = (state) => {\r\n  return {\r\n    user: appSelector.selectGetCurrentUser(state),\r\n  };\r\n};\r\n\r\nconst mapToDispatch = (dispatch: DispatchThunk) => {\r\n  return {\r\n    fetchUserFromLocalStorage: (user: UserModel) => {\r\n      dispatch(appAction.Actions.addUser(user));\r\n    },\r\n  };\r\n};\r\n\r\nconst Connector = connect(mapToStateProps, mapToDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof Connector>;\r\n\r\nconst ProfileComponent = Connector((props: PropsFromRedux) => {\r\n  const checkUserFromLocalStorage = () => {\r\n    if (localStorage.getItem(\"user\") !== null) {\r\n      return JSON.parse(localStorage.getItem(\"user\") || \"{}\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (checkUserFromLocalStorage() !== undefined) {\r\n      props.fetchUserFromLocalStorage(checkUserFromLocalStorage());\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <HeaderProfile></HeaderProfile>\r\n      <ProfileBody></ProfileBody>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ProfileComponent;\r\n","import React from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport ProfileComponent from \"./../components/profile/ProfileComponent\";\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <>\r\n      <ProfileComponent />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"sourceRoot":""}