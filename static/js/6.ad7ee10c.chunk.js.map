{"version":3,"sources":["components/commonComponent/orderParts/orderAdditionalInfo.tsx","components/commonComponent/orderParts/orderDefaultInfo.tsx","components/singleOrder/SingleOrderContent.tsx","layouts/singleOrder.tsx"],"names":["OrderAdditionalInfo","payment","delivery","className","TypePaymentRus","TypePayment","TypeDeliveryRus","TypeDelivery","OrderDefaultInfo","numberOrder","promocode","totalPrice","SingleOrderContent","cart","CommonTitle","title","idOrder","paymentChoose","deliveryChoose","SingleOrder","connect","state","user","appSelector","Connector","props","useParams","orderId","userId","useState","orderInfo","setOrderInfo","setTotalPrice","useEffect","local","JSON","parse","localStorage","getItem","items","forEach","element","counts","item","price","String","undefined"],"mappings":"oHAAA,wBA4BeA,IAhB4C,SAAC,GAGrD,IAFLC,EAEI,EAFJA,QACAC,EACI,EADJA,SAEA,OACE,qCACE,sBAAKC,UAAU,qBAAf,sEACeC,IAAeC,IAAYJ,OAE1C,sBAAKE,UAAU,sBAAf,kFACiBG,IAAgBC,IAAaL,Y,iCCtBpD,gBAuBeM,IAhBsC,SAAC,GAI/C,IAHLC,EAGI,EAHJA,YACAC,EAEI,EAFJA,UACAC,EACI,EADJA,WAEA,OACE,gCACE,sBAAKR,UAAU,gBAAf,kFAA8CM,KAC9C,sBAAKN,UAAU,uBAAf,+DAAiDO,KACjD,sBAAKP,UAAU,uBAAf,4FACoBQ,EADpB,mB,0HCYSC,EAjBqC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMF,EAAiB,EAAjBA,WAC3D,OACE,sBAAKR,UAAU,qBAAf,UACE,cAACW,EAAA,EAAD,CAAaC,MAAK,+EAAmBF,EAAKG,WAC1C,cAAC,IAAD,CACEP,YAAaI,EAAKG,QAClBN,UAAWG,EAAKH,UAChBC,WAAYA,IAEd,cAAC,IAAD,CACEV,QAASY,EAAKI,cACdf,SAAUW,EAAKK,qB,sBCFjBC,EAHYC,aANM,SAACC,GACvB,MAAO,CACLC,KAAMC,IAAiCF,MAOvBG,EAAU,SAACC,GAA2B,IAAD,EAC3BC,cAApBC,EAD+C,EAC/CA,QAASC,EADsC,EACtCA,OADsC,EAErBC,qBAFqB,mBAEhDC,EAFgD,KAErCC,EAFqC,OAGnBF,mBAAS,IAHU,mBAGhDlB,EAHgD,KAGpCqB,EAHoC,KAkBvD,OAdAC,qBAAU,WACR,IAAMC,EAAiBC,KAAKC,MAC1BC,aAAaC,QAAb,UAAwBV,KAAa,MAEnCD,GAASI,EAAaG,EAAMP,MAC/B,IAEHM,qBAAU,WACR,IAAItB,EAAa,EACR,OAATmB,QAAS,IAATA,KAAWS,MAAMC,SAAQ,SAACC,GACxB9B,GAAc8B,EAAQC,OAASD,EAAQE,KAAKC,SAE9CZ,EAAca,OAAOlC,MACpB,CAACmB,IAEF,mCACiBgB,IAAdhB,GACC,cAAC,EAAD,CAAoBnB,WAAYA,EAAYE,KAAMiB,SAM3CX","file":"static/js/6.ad7ee10c.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\nimport {\r\n  TypeDelivery,\r\n  TypeDeliveryRus,\r\n  TypePayment,\r\n  TypePaymentRus,\r\n} from \"../../../api/enums\";\r\nexport interface IOrderAdditionalInfoProps {\r\n  payment: string;\r\n  delivery: string;\r\n}\r\n\r\nconst OrderAdditionalInfo: FC<IOrderAdditionalInfoProps> = ({\r\n  payment,\r\n  delivery,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"orderItem__payment\">\r\n        Вид оплаты: {TypePaymentRus[TypePayment[payment]]}\r\n      </div>\r\n      <div className=\"orderItem__delivery\">\r\n        Тип доставки: {TypeDeliveryRus[TypeDelivery[delivery]]}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderAdditionalInfo;\r\n","import React, { FC } from \"react\";\r\nexport interface IOrderDefaultInfoProps {\r\n  numberOrder: string;\r\n  promocode: string;\r\n  totalPrice: string;\r\n}\r\n\r\nconst OrderDefaultInfo: FC<IOrderDefaultInfoProps> = ({\r\n  numberOrder,\r\n  promocode,\r\n  totalPrice,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"orderItem__id\">Номер заказа: {numberOrder}</div>\r\n      <div className=\"orderItem__promocode\">Промокод: {promocode}</div>\r\n      <div className=\"orderItem__promocode\">\r\n        Сумма заказа: {`${totalPrice} ₽`}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDefaultInfo;\r\n","import React, { FC, useEffect } from \"react\";\r\nimport { ICart } from \"../../store/cart\";\r\nimport CommonTitle from \"../commonComponent/commonTitle/CommonTitle\";\r\nimport OrderAdditionalInfo from \"../commonComponent/orderParts/orderAdditionalInfo\";\r\nimport OrderDefaultInfo from \"../commonComponent/orderParts/orderDefaultInfo\";\r\nimport \"./SingleOrderContent.scss\";\r\nexport interface ISingleOrderContent {\r\n  cart: ICart;\r\n  totalPrice: string;\r\n}\r\n\r\nconst SingleOrderContent: FC<ISingleOrderContent> = ({ cart, totalPrice }) => {\r\n  return (\r\n    <div className=\"singleOrderContent\">\r\n      <CommonTitle title={`Номер заказа: ${cart.idOrder}`}></CommonTitle>\r\n      <OrderDefaultInfo\r\n        numberOrder={cart.idOrder}\r\n        promocode={cart.promocode}\r\n        totalPrice={totalPrice}\r\n      ></OrderDefaultInfo>\r\n      <OrderAdditionalInfo\r\n        payment={cart.paymentChoose}\r\n        delivery={cart.deliveryChoose}\r\n      ></OrderAdditionalInfo>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleOrderContent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SingleOrderContent from \"./../components/singleOrder/SingleOrderContent\";\r\nimport * as appSelector from \"../store/app/app.selectors\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ICart } from \"../store/cart\";\r\n\r\ntype QuizParams = {\r\n  orderId: string;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: appSelector.selectGetCurrentUser(state),\r\n  };\r\n};\r\n\r\nconst Connector = connect(mapStateToProps);\r\ntype PropsFromRedux = ConnectedProps<typeof Connector>;\r\n\r\nconst SingleOrder = Connector((props: PropsFromRedux) => {\r\n  const { orderId, userId } = useParams<string>();\r\n  const [orderInfo, setOrderInfo] = useState<ICart | undefined>();\r\n  const [totalPrice, setTotalPrice] = useState(\"\");\r\n  useEffect(() => {\r\n    const local: ICart[] = JSON.parse(\r\n      localStorage.getItem(`${userId}`) || \"{}\"\r\n    );\r\n    if (orderId) setOrderInfo(local[orderId]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let totalPrice = 0;\r\n    orderInfo?.items.forEach((element) => {\r\n      totalPrice += element.counts * element.item.price;\r\n    });\r\n    setTotalPrice(String(totalPrice));\r\n  }, [orderInfo]);\r\n  return (\r\n    <div>\r\n      {orderInfo !== undefined && (\r\n        <SingleOrderContent totalPrice={totalPrice} cart={orderInfo} />\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SingleOrder;\r\n"],"sourceRoot":""}